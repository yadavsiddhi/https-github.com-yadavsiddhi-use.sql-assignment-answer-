

 1. Retrieve the total number of rentals made in the Sakila database. 

    SELECT COUNT(*) AS total_rentals FROM rental;



 2. Find the average rental duration (in days) of movies rented from the Sakila database. 

     SELECT AVG(rental_duration) AS average_rental_duration FROM rental;



 3. Display the first name and last name of customers in uppercase. 

    SELECT UPPER(first_name) AS upper_first_name, UPPER(last_name) AS upper_last_name FROM customer;



 4. Extract the month from the rental date and display it alongside the rental ID. 

    SELECT rental_id, MONTH(rental_date) AS rental_month FROM rental;



 5. Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 

    SELECT customer_id, COUNT(rental_id) AS rental_count FROM rental GROUP BY customer_id;



 6. Find the total revenue generated by each store. 

    SELECT store_id, SUM(amount) AS total_revenue FROM payment GROUP BY store_id;


 7. Display the title of the movie, customer s first name, and last name who rented it. 


    SELECT film.title AS movie_title, customer.first_name AS customer_first_name, customer.last_name AS customer_last_name
    FROM film
    JOIN 
        inventory ON film.film_id = inventory.film_id
    JOIN 
        rental ON inventory.inventory_id = rental.inventory_id
   JOIN 
        customer ON rental.customer_id = customer.customer_id;




 8. Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 

   SELECT actor.actor_id, actor.first_name, actor.last_name
   FROM actor
   JOIN 
       film_actor ON actor.actor_id = film_actor.actor_id
   JOIN 
       film ON film_actor.film_id = film.film_id
   WHERE 
        film.title = 'Gone with the Wind';



 9. Determine the total number of rentals for each category of movies. 

    SELECT fc.category_id, c.name AS category_name, COUNT(r.rental_id) AS total_rentals
    FROM film_category fc
    JOIN
        film f ON fc.film_id = f.film_id
    JOIN
        rental r ON f.film_id = r.film_id
    JOIN 
        category c ON fc.category_id = c.category_id
    GROUP BY
        fc.category_id, c.name
    ORDER BY
       total_rentals DESC;



 
 10. Find the average rental rate of movies in each language. 

     SELECT l.language_id, l.name AS language_name,
     AVG(f.rental_rate) AS average_rental_rate
     FROM film f
     JOIN
         language l ON f.language_id = l.language_id
     GROUP BY
         l.language_id, l.name
    ORDER BY
         average_rental_rate DESC;




 11. Retrieve the customer names along with the total amount they've spent on rentals. 

     SELECT c.customer_id, c.first_name, c.last_name, SUM(p.amount) AS total_amount_spent
     FROM customer c
     JOIN
         rental r ON c.customer_id = r.customer_id
     JOIN
         payment p ON r.rental_id = p.rental_id
     GROUP BY
         c.customer_id, c.first_name, c.last_name
     ORDER BY
         total_amount_spent DESC;



 12. List the titles of movies rented by each customer in a particular city (e.g., 'London').


    SELECT
        c.customer_id, c.first_name, c.last_name, f.title AS movie_title
   FROM customer c
   JOIN
       address a ON c.address_id = a.address_id
   JOIN
       city ct ON a.city_id = ct.city_id
  JOIN
       rental r ON c.customer_id = r.customer_id
  JOIN
       inventory inv ON r.inventory_id = inv.inventory_id
  JOIN
       film f ON inv.film_id = f.film_id
  WHERE
       ct.city = 'London'
  ORDER BY
       c.customer_id, movie_title;



 13. Display the top 5 rented movies along with the number of times they've been rented. 


    SELECT
         f.film_id,
         f.title AS movie_title,
         COUNT(r.rental_id) AS rental_count
   FROM
         film f
   JOIN
         inventory i ON f.film_id = i.film_id
   JOIN
         rental r ON i.inventory_id = r.inventory_id
   GROUP BY
         f.film_id, f.title
   ORDER BY
        rental_count DESC
        LIMIT 5;




 14. Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).


    SELECT
         c.customer_id,
         c.first_name,
         c.last_name
    FROM
         customer c
    JOIN
         rental r ON c.customer_id = r.customer_id
    JOIN
         inventory i ON r.inventory_id = i.inventory_id
    WHERE
         i.store_id IN (1, 2)
   GROUP BY
         c.customer_id, c.first_name, c.last_name
   HAVING
         COUNT(DISTINCT i.store_id) = 2;






